// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskFlowSqlite.DataAccess;

#nullable disable

namespace TaskFlowSqlite.Migrations
{
    [DbContext(typeof(TaskFlowDbContext))]
    partial class TaskFlowDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("TaskFlowSqlite.Models.ListItem", b =>
                {
                    b.Property<int>("ListItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeletable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ListItemId");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            ListItemId = 1,
                            IsDeletable = false,
                            Name = "All Tasks"
                        },
                        new
                        {
                            ListItemId = 2,
                            IsDeletable = false,
                            Name = "Starred"
                        });
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.SubTaskItem", b =>
                {
                    b.Property<int>("SubTaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubTaskItemId");

                    b.HasIndex("TaskItemId");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStarred")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskItemId");

                    b.HasIndex("ListItemId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.SubTaskItem", b =>
                {
                    b.HasOne("TaskFlowSqlite.Models.TaskItem", "TaskItem")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.TaskItem", b =>
                {
                    b.HasOne("TaskFlowSqlite.Models.ListItem", "ListItem")
                        .WithMany("Tasks")
                        .HasForeignKey("ListItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListItem");
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.ListItem", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskFlowSqlite.Models.TaskItem", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
